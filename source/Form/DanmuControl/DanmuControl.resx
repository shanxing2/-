<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picHotWord.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picYanText.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAPCSURBVFhH1VgxchQxEPQTeAJP
        8BN4ggPvFRn3A0iI734ACfE5JsE/wMHZJrOrCKmyXXwAJ2RUie6Z0Wq0K9na2wNMVw0+pNFM74xmpN2D
        EMKTFv1nR4Tz7jCcL1aQT/h9hb/ByW3Ydp9l7qJ7TV1bNg1TCYbLl8/DdvFOCOSEWoRrVuHq6JmZexyt
        BGkUUdgMHJp0d5AzyCn+v1bhbxnDXGENH7KFaAvBcLE4Qrp+DBxch+3xG0bU1KrQqEOXa7wNRhS2Ta2M
        xwgiAoOoISqXxy9sejK4ViPrbCKaNj1GjaCmlJu/J3ZfelqMH0q6pCB8oeA3x2S/jgsEY0vIvdPfFFNe
        JejJSWqSEyO/GqX9IVHdlZkQ0Gae9m5jUwklgvI0adGZfzLZj7tVcJRs38nD5iTf25RiSNAIqDIXenLa
        XqKjudJHc0TSbyVPUBVj2rg/XFqrLWaOpJTSl/rEODnEwGQEt4uTfrFPA8KejO5d1uaGflA4cdxSHQlK
        r0qTZzIIZCn/U5IHI7UgRrEn6KNkfU5SXiqIL8sQbjYhfP84TbiGa4f24ENIANon+/G1I2hEsFllAKCC
        KeZyc4JlO4JrSzZ9qlPB3ApBRI+3ElXEkWR6UKz0ua/rEH79VIdTwDVcW7IJX+YWfnEs2rgRdJGys3UQ
        6jah84gakQdFu4avhxhB3kKocEcFItuTrTKfYN+kyYVjkaCdoa56hwd6i8wnOPIfUxwVTm3ekZ4g8wle
        mXv6l6wOCPqm6Rc2ymyCIGTAb6mL/4VgvJa7FGc3jEaZSzDrwVmKY0E82SKJbcYdOf+8zejJpgRd5+4b
        tT9dWmU+QW3UzneMYPmoy94ZGmQWwe7e3I6POhlMheJ6UeWyUJPrt0qO4O+STl38vTAeHHeOoD+P/XWr
        8uJdk28fVEpzVXFHbPW6pXc/ncDrogwCf/3Cqt9zdJz1EAkSeBJXud3Shqenepq0XfkJS2l6cbGqIrL3
        lX0JbJp5ksM7snth43VfJhxBIk8pNmtUBDC2z0imyGlg0uXEpXxEkICyT3VOUh5gYuFkgrV+zw3JuWYt
        KBEk8pTSQEo3gXFEc0qfFN0+agRtqu1ep78L9KgS5JN5ktwf28Urm+5hThBxnJ3+giG/eZ7KXPZwBG2l
        PUfBcesy1aNGMEIdRCN0jDZgfXIXSJ/zrURspmIZ4TGChO27QTqRGn57trP7IchLkH6ndukUG8VPehla
        CBK2mfNoJkkfzPWjun5Y17HKlzDYKqV0iFaCEUpUCmSHSpY165aoKw4OfgMA1CMGKoGD8wAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="picDanmuColor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="cmsBrowserRightButtonClick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 17</value>
  </metadata>
  <metadata name="cmsUserNickClick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>342, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>30</value>
  </metadata>
</root>